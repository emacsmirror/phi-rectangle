* phi-rectangle.el

another rectangle-mark command

矩形選択コマンド

** Screencast

[[screencast.gif]]

** Background

There are several previous works such as "rect-mark", "cua-mode",
etc. The motivation to write this command is as follows:

- cua-mode has many functionalities such as "delete-selection",
  "shift-region", and "rectangle-mark", and it seems too complex when
  we just want to use "rectangle-mark".

- rect-mark seems simple and clean, but too simple for me. For
  example, to duplicate rectangle we must call following commands:

  1. rm-set-mark [C-x r C-SPC]
  2. rm-kill-ring-save [C-x r C-w]
  3. yank-rectangle [C-x r y]

  On the other hands, cua-mode can do it with:

  1. cua-set-rectangle-mark [C-RET]
  2. cua-copy-region [C-w]
  3. cua-paste [C-y]

  cua-mode unifies "copy" and "copy-rectangle", "yank" and
  "yank-rectangle", etc, and is very handy.

- "force" option in rect-mark is not very easy to use, Because we need
  to delete trailing whitespaces manually.

"phi-rectangle" is based on rect-mark, but as easy-to-use as cua.

** Usage


Require this script

: (require 'phi-rectangle)

and call function =phi-rectangle-mode=. Then following commands are
available

- [C-RET] phi-rectangle-set-mark-command

  Activate the rectangle mark.

- phi-rectangle-kill-region (replaces "kill-region")

  A dwim version of "kill-region". If the rectangle mark is active,
  kill rectangle. If the normal mark is active, kill region as usual.
  Otherwise, kill whole line.

- phi-rectangle-kill-ring-save (replaces "kill-ring-save")

  A dwim version of "kill-ring-save" like "phi-rectangle-kill-region".

- phi-rectangle-yank (replaces "yank")

  A dwim version of "yank". If the last killed object is a rectangle,
  yank rectangle. Otherwise yank a kill-ring item as usual.

** for multiple-cursors users

Following hacks are perhaps useful:

: (defadvice mc--maybe-set-killed-rectangle (around phi-hack activate)
:   (let ((entries (mc--kill-ring-entries)))
:     (unless (mc--all-equal entries)
:       (setq killed-rectangle entries
:             phi-rectangle--last-killed-is-rectangle t))))

: (defadvice phi-rectangle-yank (before phi-hack activate)
:   (when (and multiple-cursors-mode
:              phi-rectangle--last-killed-is-rectangle)
:     (let* ((n 0))
:       (mc/for-each-cursor-ordered
:        (let ((kill-ring (overlay-get cursor 'kill-ring))
:              (kill-ring-yank-pointer (overlay-get cursor 'kill-ring-yank-pointer)))
:          (kill-new (or (nth n killed-rectangle) ""))
:          (overlay-put cursor 'kill-ring kill-ring)
:          (overlay-put cursor 'kill-ring-yank-pointer kill-ring-yank-pointer)
:          (setq n (1+ n)))))
:     (setq phi-rectangle--last-killed-is-rectangle nil)))

